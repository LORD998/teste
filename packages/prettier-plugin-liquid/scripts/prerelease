#!/usr/bin/env node

const fs = require('fs').promises;
const path = require('path');
const packageJson = require('../package.json');

async function run() {
  const VERSION = packageJson.version;
  if (!VERSION) {
    throw new Error('VERSION required');
  }
  if (!/^\d+\.\d+\.\d+/.test(VERSION)) {
    throw new Error('VERSION must match "X.X.X[-.*]"');
  }
  await Promise.all([updateSinceVersion(VERSION)]);
}

async function updateSinceVersion(version) {
  const fileToBeModified = path.join(__dirname, '../src/plugin.ts');
  const index = await fs.readFile(fileToBeModified, 'utf8');
  const modified = index.replace(/0\.0\.0/g, version);
  await fs.writeFile(fileToBeModified, modified, 'utf8');
}

async function main() {
  let statusCode = 0;
  try {
    await run();
  } catch (e) {
    console.log(e);
    statusCode = 1;
  }
  process.exit(statusCode);
}

main();
