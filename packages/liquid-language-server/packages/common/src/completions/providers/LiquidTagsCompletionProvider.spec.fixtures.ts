export const tags = [
  {
    category: 'theme',
    deprecated: false,
    deprecation_reason: '',
    description: "Inside snippets and app blocks, you can't directly acce...",
    parameters: [],
    summary: 'Renders a [snippet](/themes/architecture#snippets) or [app ...',
    name: 'render',
    syntax: "{% render 'filename' %}",
    syntax_keywords: [
      {
        keyword: 'filename',
        description: 'The name of the snippet to render, without the `.li...',
      },
    ],
    examples: [
      {
        name: 'for',
        description: 'You can render a snippet for every item in an array...',
        syntax: "{% render 'filename' for array as item %}",
        path: '/',
        raw_liquid: '',
        parameter: true,
        display_type: 'text',
        show_data_tab: true,
      },
      {
        name: 'Passing variables to a snippet',
        description: 'Variables that have been [created](/docs/api/liquid...',
        syntax: "{% render 'filename', variable: value %}",
        path: '/',
        raw_liquid: '',
        parameter: true,
        display_type: 'text',
        show_data_tab: true,
      },
      {
        name: 'with',
        description: 'You can pass a single object to a snippet using the...',
        syntax: "{% render 'filename' with object as name %}",
        path: '/',
        raw_liquid: '',
        parameter: true,
        display_type: 'text',
        show_data_tab: true,
      },
    ],
  },
  {
    category: 'iteration',
    deprecated: false,
    deprecation_reason: '',
    description: 'You can do a maximum of 50 iterations with a `for` loop...',
    parameters: [
      {
        description: 'The number of iterations to perform.',
        name: 'limit',
        required: false,
        types: ['number'],
      },
      {
        description: 'The 1-based index to start iterating at.',
        name: 'offset',
        required: false,
        types: ['number'],
      },
      {
        description: 'A custom numeric range to iterate over.',
        name: 'range',
        required: false,
        types: ['untyped'],
      },
      {
        description: 'Iterate in reverse order.',
        name: 'reversed',
        required: false,
        types: ['untyped'],
      },
    ],
    summary: 'Renders an expression for every item in an array.',
    name: 'for',
    syntax: '{% for variable in array %}\n  expression\n{% endfor %}',
    syntax_keywords: [
      {
        keyword: 'variable',
        description: 'The current item in the array.',
      },
      {
        keyword: 'array',
        description: 'The array to iterate over.',
      },
      {
        keyword: 'expression',
        description: 'The expression to render for each iteration.',
      },
    ],
    examples: [
      {
        name: '',
        description: '',
        syntax: '',
        path: '/collections/sale-potions',
        raw_liquid: '{% for p in all_products %} ... {% endfor %}',
        parameter: false,
        display_type: 'text',
        show_data_tab: true,
      },
      {
        name: 'limit',
        description: 'You can limit the number of iterations using the `l...',
        syntax: '{% for variable in array limit: number %} exp {% endfor %}',
        path: '/collections/sale-potions',
        raw_liquid: '{% for p in all_products limit: 2 %} ... {% endfor %}',
        parameter: true,
        display_type: 'text',
        show_data_tab: true,
      },
      {
        name: 'offset',
        description: 'You can specify a 1-based index to start iterating ...',
        syntax: '{% for v in array offset: number %} ... {% endfor %}',
        path: '/collections/sale-potions',
        raw_liquid: '{% for p in all_products offset: 2 %} ... {% endfor %}',
        parameter: true,
        display_type: 'text',
        show_data_tab: true,
      },
      {
        name: 'range',
        description: 'Instead of iterating over specific items in an arra...',
        syntax: '{% for v in (number..number) %} ... {% endfor %}',
        path: '/collections/all',
        raw_liquid: '{% for i in (1..3) -%} ... {%- endfor %}',
        parameter: true,
        display_type: 'text',
        show_data_tab: true,
      },
      {
        name: 'reversed',
        description: 'You can iterate in reverse order using the `reverse...',
        syntax: '{% for variable in array reversed %} ... {% endfor %}',
        path: '/collections/sale-potions',
        raw_liquid: '{% for p in all_products reversed %} ... {% endfor %}',
        parameter: true,
        display_type: 'text',
        show_data_tab: true,
      },
    ],
  },
  {
    category: 'syntax',
    deprecated: false,
    deprecation_reason: '',
    description: "Any text inside `comment` tags won't be output, and any...",
    parameters: [],
    summary: 'Prevents an expression from being rendered or output.',
    name: 'comment',
    syntax: '{% comment %}\n  content\n{% endcomment %}',
    syntax_keywords: [
      {
        keyword: 'content',
        description: 'The content of the comment.',
      },
    ],
    examples: [
      {
        name: 'Inline comments',
        description: 'Inline comments prevent an expression inside of a t...',
        syntax: '{% # content %}',
        path: '/',
        raw_liquid: '{% # this is a comment %}',
        parameter: false,
        display_type: 'text',
        show_data_tab: true,
      },
      {
        name: 'Inline comments inside `liquid` tags',
        description: 'You can use inline comment tags inside [`liquid` ta...',
        syntax: '',
        path: '/',
        raw_liquid: "{% liquid\n  # this is a comment\n  assign topic = '...",
        parameter: false,
        display_type: 'text',
        show_data_tab: true,
      },
    ],
  },
];
